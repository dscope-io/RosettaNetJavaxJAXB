/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.3/userguide/java_library_plugin.html
 */

import org.gradle.api.file.DuplicatesStrategy

plugins {
    id 'java'
    id 'maven-publish'
}


group 'io.dscope'
version '0.5.0'

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    withSourcesJar()
    withJavadocJar()
}

repositories {
    mavenLocal()
    mavenCentral()
}


jar {
    manifest {
        attributes('Implementation-Title': 'dscope-rosettanet-javax-jaxb',
                   'Implementation-Version': project.version)
    }
    
    archiveBaseName = 'dscope-rosettanet-javax-jaxb'
}

task fatJar(type: Jar) {
    manifest {
        attributes('Implementation-Title': 'dscope-rosettanet-javax-jaxb',
                   'Implementation-Version': project.version)
    }
    
    archiveBaseName = 'dscope-rosettanet-javax-jaxb-with-dependencies'
    archiveClassifier.set('all')
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    exclude('module-info.class')
    
    from { configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

tasks.withType(Javadoc).configureEach {
    options.addStringOption('Xdoclint:none', '-quiet')
}

test {
    useJUnitPlatform()
    def pipFilter = System.getProperty('descriptive.pip') ?: project.findProperty('descriptive.pip')
    if (pipFilter) {
        systemProperty 'descriptive.pip', pipFilter.toString()
    }

    def versionFilter = System.getProperty('descriptive.version') ?: project.findProperty('descriptive.version')
    if (versionFilter) {
        systemProperty 'descriptive.version', versionFilter.toString()
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact tasks.named('fatJar')

            pom {
                name = 'dscope-rosettanet-javax-jaxb'
                description = 'RosettaNet JAXB bindings packaged for use with Jakarta/Javax runtimes.'
                url = 'https://github.com/dscope-io/RosettaNetJavaxJAXB'
                licenses {
                    license {
                        name = 'Apache License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/dscope-io/RosettaNetJavaxJAXB.git'
                    developerConnection = 'scm:git:ssh://git@github.com:dscope-io/RosettaNetJavaxJAXB.git'
                    url = 'https://github.com/dscope-io/RosettaNetJavaxJAXB'
                }
            }
        }
    }
}

tasks.register('install') {
    group = 'publishing'
    description = 'Publishes the library to the local Maven repository.'
    dependsOn tasks.named('publishToMavenLocal')
}

dependencies {			
    // JAXB dependencies for Java 9+
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.1'
    implementation 'org.jvnet.jaxb2_commons:jaxb2-basics-runtime:1.11.1'

    // JUnit Jupiter test framework
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.11.3'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.11.3'
    testImplementation group: 'org.xmlunit', name: 'xmlunit-core', version: '2.9.1'
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.24.2'
    testImplementation 'org.slf4j:slf4j-api:2.0.16'
    testRuntimeOnly 'org.slf4j:slf4j-simple:2.0.16'
}

